{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  cartItems: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.cartItems.push({\n          title: newItem.title,\n          price: newItem.price,\n          quantity: 1\n        });\n      } else {\n        existingItem.quantity++;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item === id);\n\n      if (existingItem.quantity === 1) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport const cartReducer = cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","cartSlice","name","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","title","price","quantity","removeItemFromCart","filter","cartActions","actions","cartReducer","reducer"],"sources":["C:/Users/T-GAMER/Desktop/01-starting-project/src/store/cartReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = { cartItems: [] };\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState,\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.cartItems.find(\r\n                (item) => item.id === newItem.id\r\n            );\r\n            if (!existingItem) {\r\n                state.cartItems.push({\r\n                    title: newItem.title,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                });\r\n            } else {\r\n                existingItem.quantity++;\r\n            }\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.cartItems.find((item) => item === id);\r\n            if (existingItem.quantity === 1) {\r\n                state.cartItems = state.cartItems.filter(\r\n                    (item) => item.id !== id\r\n                );\r\n            } else {\r\n                existingItem.quantity--;\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport const cartReducer = cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EAAEC,SAAS,EAAE;AAAb,CAArB;AAEA,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC1BI,IAAI,EAAE,MADoB;EAE1BH,YAF0B;EAG1BI,QAAQ,EAAE;IACNC,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACzB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACL,SAAN,CAAgBU,IAAhB,CAChBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EADb,CAArB;;MAGA,IAAI,CAACH,YAAL,EAAmB;QACfJ,KAAK,CAACL,SAAN,CAAgBa,IAAhB,CAAqB;UACjBC,KAAK,EAAEP,OAAO,CAACO,KADE;UAEjBC,KAAK,EAAER,OAAO,CAACQ,KAFE;UAGjBC,QAAQ,EAAE;QAHO,CAArB;MAKH,CAND,MAMO;QACHP,YAAY,CAACO,QAAb;MACH;IACJ,CAfK;;IAgBNC,kBAAkB,CAACZ,KAAD,EAAQC,MAAR,EAAgB;MAC9B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACL,SAAN,CAAgBU,IAAhB,CAAsBC,IAAD,IAAUA,IAAI,KAAKC,EAAxC,CAArB;;MACA,IAAIH,YAAY,CAACO,QAAb,KAA0B,CAA9B,EAAiC;QAC7BX,KAAK,CAACL,SAAN,GAAkBK,KAAK,CAACL,SAAN,CAAgBkB,MAAhB,CACbP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EADR,CAAlB;MAGH,CAJD,MAIO;QACHH,YAAY,CAACO,QAAb;MACH;IACJ;;EA1BK;AAHgB,CAAD,CAA7B;AAiCA,OAAO,MAAMG,WAAW,GAAGlB,SAAS,CAACmB,OAA9B;AACP,OAAO,MAAMC,WAAW,GAAGpB,SAAS,CAACqB,OAA9B"},"metadata":{},"sourceType":"module"}